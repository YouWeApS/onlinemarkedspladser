# frozen_string_literal: true

# Load DSL and set up stages
require 'capistrano/setup'

# Include default deployment tasks
require 'capistrano/deploy'

require 'whenever/capistrano'

# Load the SCM plugin appropriate to your project:
#
# require "capistrano/scm/hg"
# install_plugin Capistrano::SCM::Hg
# or
# require "capistrano/scm/svn"
# install_plugin Capistrano::SCM::Svn
# or
require 'capistrano/scm/git'
install_plugin Capistrano::SCM::Git

# https://github.com/seuros/capistrano-puma#usage
require 'capistrano/puma'
install_plugin Capistrano::Puma
install_plugin Capistrano::Puma::Nginx

# https://github.com/seuros/capistrano-newrelic#in-capfile
require 'capistrano/newrelic'

# Used to initially generate the monit config file.
# Because monit needs sudo acces, and core_api doesn't have it this isn't used
# in the everyday deployment cycle.
# install_plugin Capistrano::Puma::Monit

# Include tasks from other gems included in your Gemfile
#
# For documentation on these, see for example:
#
#   https://github.com/capistrano/rvm
#   https://github.com/capistrano/rbenv
#   https://github.com/capistrano/chruby
#   https://github.com/capistrano/bundler
#   https://github.com/capistrano/rails
#   https://github.com/capistrano/passenger
#
# require "capistrano/rvm"
# require "capistrano/rbenv"
# require "capistrano/chruby"
# require "capistrano/bundler"
# require "capistrano/rails/assets"
require 'capistrano/rails/migrations'
# require "capistrano/passenger"

# https://github.com/ilyakatz/data-migrate#capistrano-support
require 'capistrano/data_migrate'

# Load custom tasks from `lib/capistrano/tasks` if you have any defined
Dir.glob('lib/capistrano/tasks/*.rake').each { |r| import r }

# Because rollbar capistrano hoos into the deploy:compile_assets, but we're not
# using assets via the API, this just mocks the presence of the task.
namespace :deploy do
  desc 'Mock compile_assets'
  task :compile_assets do
    # NOOP
  end
end

# http://bit.ly/2NYUKtR
require 'rollbar/capistrano3'
